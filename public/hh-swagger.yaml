---
swagger: '2.0'
info:
  version: 1.0.0
  title: HH Mobile API
schemes:
- http
- https
basePath: /v1
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  api_key:
    description: Clients must always pass their API key!
    type: apiKey
    name: api_key
    in: query
security:
  - api_keyey: []

paths:
  /ping:
    get:
      description: Ping the API server.
      responses:
        200:
          description: A ping-pong.
          examples:
            application/json:
              ping: pong
        403:
          description: Forbidden

  /users/facebookLogin:
    post:
      description: Signs a Facebook user into the app.  Creates a user entry on
        the backend if one doesn't already exist.

      parameters:
      - name: screen_name
        description: The user's public-facing handle which other users will see.
          Will be associated with a newly generated account (if applicable).
        required: true
        type: string
        in: query

      - name: facebook_id
        description: the user's facebook id.
        required: true
        type: string
        in: query

      responses:
        200:
          description: A successful login will return an access token for the
            user.
          schema:
            type: object
            properties:
              accessKey:
                type: string
          examples:
            application/json:
              accessKey: "ca1ff6a5-e980-4bc1-b138-938d0b472deb"
        403:
          description: Forbidden

  /users/attributes:
    put:
      description: Set a user attribute.

      parameters:
      - name: access_key
        description: The user's access key.
        required: true
        type: string
        in: query

      - name: attributeName
        description: The attribute to be set.
        required: true
        type: string
        in: query

      - name: attributeValue
        description: The value the attribute is to be set to.
        required: true
        type: string
        in: query

      responses:
        200:
          description: The attribute was set successfully.
        401:
          description: Unauthorized User
        403:
          description: Forbidden

  /places/ratings:
    get:
      description: Get overall ratings for some places

      parameters:
      - name: places_ids
        description: The places the ratings of which should be returned.
        required: true
        type: array
        items:
          type: string
        in: query

      responses:
        200:
          description: The requested ratings.
          schema:
            type: array
            items:
              type: object
              properties:
                placeId:
                  type: string
                rating:
                  type: integer
          examples:
            application/json:
              [
                {
                  placeId: "41cb61df-647c-4572-8f93-24df4cf63a0b",
                  rating: 0
                },
                {
                  placeId: "5759a3a9-a3d9-4fd9-ab39-e6d979c78e0e",
                  rating: 5
                }
              ]
        403:
          description: Forbidden
